{"version":3,"sources":["components/FlipPager/style.module.css","components/FlipPager/constans.ts","components/FlipPager/flipPager.tsx","components/FlipPager/flipItem.tsx","components/FlipPager/overlay.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","DIRECTION","ActionType","FlipItem","children","props","className","style","flipItem","display","hidden","Overlay","current","next","direction","speed","shadowSide","shadowFlip","easing","onTransitionEnd","useState","LTR","overlay","classNames","flipInitial","middleClassName","setMiddleClassName","edgeStyle2Opacity","setEdgeStyle2Opacity","middleStyle2Opacity","setMiddleStyle2Opacity","edgeStyle1","transition","edgeStyle2","opacity","middleStyle1","middleStyle2","setTimeout","flipNext","flipPrev","ts180","zIndex","oBack","oOuter","oBackContent","oInner","shadow","transitionDuration","transitionTimingFunction","oFront","oFrontContent","flipShadow","FlipPager","page","useReducer","src","type","ANIMATION_FINISH","items","map","child","index","onEndFlip","dst","onBeforeFlip","RTL","shadowSides","dispatch","Children","toArray","concat","state","useEffect","MOVE","flipPager","perspective","toString","cloneElement","key","defaultProps","shadows","prev","App","selected","setSelected","backgroundColor","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.391864b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flipPager\":\"style_flipPager__2lVo5\",\"flipItem\":\"style_flipItem__nN-Lr\",\"overlay\":\"style_overlay__3edRz\",\"oFront\":\"style_oFront__2YNlx\",\"oBack\":\"style_oBack__CtPOe\",\"oOuter\":\"style_oOuter__pQxwJ\",\"oBackContent\":\"style_oBackContent__2jMKP\",\"oFrontContent\":\"style_oFrontContent__20YXz\",\"oInner\":\"style_oInner__3FO3I\",\"shadow\":\"style_shadow__X5aBR\",\"flipShadow\":\"style_flipShadow__4pHEW\",\"ts180\":\"style_ts180__3X9Ud\",\"flipNext\":\"style_flipNext__1srlz\",\"flipInitial\":\"style_flipInitial__1gKlq\",\"flipPrev\":\"style_flipPrev__3AYv5\"};","export enum DIRECTION {\n    RTL,\n    LTR\n}\n","import React, {Children, cloneElement, ReactElement, ReactNode, useEffect, useReducer} from \"react\";\n\nimport {DIRECTION} from \"./constans\";\nimport FlipItem from \"./flipItem\";\nimport Overlay from \"./overlay\";\n\nimport style from './style.module.css'\n\nexport type Props = {\n    // page number\n    page: number\n    // ltr (left to right) or rtl (right to left)\n    direction: DIRECTION\n    // speed for the flip transition in ms\n    speed: number\n    // easing for the flip transition\n    easing: string\n    // if set to true, both the flipping page and the sides will have an overlay to simulate shadows\n    shadows: boolean\n    // opacity value for the \"shadow\" on both sides (when the flipping page is over it)\n    // value : 0.1 - 1\n    shadowSides: number\n    // opacity value for the \"shadow\" on the flipping page (while it is flipping)\n    // value : 0.1 - 1\n    shadowFlip: number\n    // 3d perspective\n    perspective: number\n    // callback before the flip transition\n    // page is the current item´s index\n    onBeforeFlip: (current: number) => void\n    // callback after the flip transition\n    // old is the index of the previous item\n    // page is the current item´s index\n    // isLimit is true if the current page is the last one (or the first one)\n    onEndFlip: (prev: number, current: number) => void\n\n    children: ReactNode\n}\n\ntype ItemsState = {\n    src: ReactNode[]\n    dst: ReactNode[]\n    current: number\n}\n\nenum ActionType {\n    MOVE,\n    ANIMATION_FINISH\n}\n\ntype Action = {\n    type: ActionType\n    page: number\n}\n\nconst FlipPager = ({children, page, ...props}: Props) => {\n\n    const reducer = ({src, current}: ItemsState, {type, page}: Action) => {\n        if (type === ActionType.ANIMATION_FINISH || current === page) {\n            const items: ReactNode[] = src.map((child, index) => <FlipItem hidden={index !== page} children={child} />)\n            props.onEndFlip(current, page)\n            return {src, dst: items, current: page}\n        }\n\n        props.onBeforeFlip(current)\n        const items: ReactNode[] = src.map((child, index) => <FlipItem hidden={true} children={child}/>)\n        const overlay = <Overlay\n            current={src[current]}\n            next={src[page]}\n            direction={current < page ? DIRECTION.LTR : DIRECTION.RTL}\n            easing={props.easing}\n            speed={props.speed}\n            shadowSide={props.shadowSides}\n            shadowFlip={props.shadowFlip}\n            onTransitionEnd={() => dispatch({type: ActionType.ANIMATION_FINISH, page: page})}\n        />\n        const dst: ReactNode[] = Children.toArray(overlay).concat(items)\n        return {src, dst, current}\n    }\n\n    const [state, dispatch] = useReducer(reducer, {src: Children.toArray(children), dst: [], current: page})\n\n    useEffect(() => {\n        dispatch({type: ActionType.MOVE, page: page})\n    }, [page])\n\n    return <div\n        className={style.flipPager}\n        style={{\n            perspective: props.perspective.toString() + 'px'\n        }}\n    >\n        {state.dst.map((child: ReactNode, index) => cloneElement(child as ReactElement, {key: index}))}\n    </div>\n}\n\nFlipPager.defaultProps = {\n    page: 0,\n    direction: DIRECTION.LTR,\n    speed: 1000,\n    easing: 'ease-in-out',\n    shadows: true,\n    shadowSides: 0.2,\n    shadowFlip: 0.1,\n    perspective: 1200,\n    onBeforeFlip: (current: number) => {\n    },\n    onEndFlip: (prev: number, current: number) => {\n    },\n}\n\nexport default FlipPager","import {ReactNode} from \"react\";\n\nimport style from './style.module.css'\n\nexport type Props = {\n    hidden: boolean,\n    children: ReactNode\n}\n\nconst FlipItem = ({children, ...props}: Props) => {\n    return <div className={style.flipItem} style={{display: props.hidden? 'none': 'block'}}>{children}</div>\n}\n\nexport default FlipItem","import classNames from \"classnames\";\n\nimport {ReactNode, useState} from \"react\";\nimport {DIRECTION} from \"./constans\";\n\nimport style from './style.module.css'\n\nexport type Props = {\n    current: ReactNode\n    next: ReactNode\n    direction: DIRECTION\n    speed: number\n    shadowSide: number\n    shadowFlip: number\n    easing: string\n    onTransitionEnd: () => void\n}\n\nconst Overlay = ({current, next, direction, speed, shadowSide, shadowFlip, easing, onTransitionEnd}: Props) => {\n    const [middleClassName, setMiddleClassName] = useState(direction === DIRECTION.LTR? style.overlay: classNames(style.overlay, style.flipInitial))\n    const [edgeStyle2Opacity, setEdgeStyle2Opacity] = useState(shadowSide)\n    const [middleStyle2Opacity, setMiddleStyle2Opacity] = useState(shadowFlip)\n\n    const edgeStyle1 = {\n        transition: `opacity ${speed / 2}ms linear ${speed / 2}ms`,\n    }\n    const edgeStyle2 = {\n        transition: `opacity ${speed / 2}ms linear`,\n        opacity: edgeStyle2Opacity,\n    }\n\n    const middleStyle1 = {\n        transition: `opacity ${speed / 2}ms linear`,\n    }\n    const middleStyle2 = {\n        transition: `opacity ${speed / 2}ms linear ${speed / 2}ms`,\n        opacity: middleStyle2Opacity,\n    }\n\n    setTimeout(() => {\n        setMiddleClassName(direction === DIRECTION.LTR? classNames(style.overlay, style.flipNext): classNames(style.overlay, style.flipInitial, style.flipPrev))\n        setMiddleStyle2Opacity(0)\n        setEdgeStyle2Opacity(0)\n    }, 25)\n\n    return <>\n        {/* left */}\n        <div className={classNames(style.overlay, style.ts180)} style={{zIndex: 102}}>\n            <div className={classNames(style.oBack, style.ts180)}>\n                <div className={style.oOuter}>\n                    <div className={style.oBackContent}>\n                        <div className={style.oInner}>\n                            {direction === DIRECTION.LTR? current: next}\n                        </div>\n                    </div>\n                    <div className={style.shadow} style={direction === DIRECTION.LTR? edgeStyle1: edgeStyle2}/>\n                </div>\n            </div>\n        </div>\n        {/* middle */}\n        <div className={middleClassName}\n             style={{zIndex: 103, transitionDuration: `${speed}ms`, transitionTimingFunction: easing}}\n             onTransitionEnd={onTransitionEnd}\n        >\n            <div className={style.oFront}>\n                <div className={style.oOuter}>\n                    <div className={style.oFrontContent}>\n                        <div className={style.oInner}>\n                            {direction === DIRECTION.LTR? current: next}\n                        </div>\n                    </div>\n                    <div className={style.flipShadow} style={direction === DIRECTION.LTR? middleStyle1: middleStyle2}/>\n                </div>\n            </div>\n            <div className={style.oBack}>\n                <div className={style.oOuter}>\n                    <div className={style.oBackContent}>\n                        <div className={style.oInner}>\n                            {direction === DIRECTION.LTR? next: current }\n                        </div>\n                    </div>\n                    <div className={style.flipShadow} style={direction === DIRECTION.LTR? middleStyle2: middleStyle1}/>\n                </div>\n            </div>\n        </div>\n        {/* right */}\n        <div className={style.overlay} style={{zIndex: 101}}>\n            <div className={style.oFront}>\n                <div className={style.oOuter}>\n                    <div className={style.oFrontContent}>\n                        <div className={style.oInner}>\n                            {direction === DIRECTION.LTR? next: current }\n                        </div>\n                    </div>\n                    <div className={style.shadow} style={direction === DIRECTION.LTR? edgeStyle2: edgeStyle1}/>\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nexport default Overlay\n","import React, {useState} from 'react';\n\nimport './App.css';\nimport FlipPager from \"./components/FlipPager/flipPager\";\n\nfunction App() {\n\n    const [selected, setSelected] = useState(0)\n\n    return (\n        <div className=\"container\">\n            <FlipPager\n                page={selected}\n            >\n                <div style={{backgroundColor: \"red\"}} className=\"page\">PAGE1</div>\n                <div style={{backgroundColor: \"blue\"}} className=\"page\">PAGE2</div>\n                <div style={{backgroundColor: \"yellow\"}} className=\"page\">PAGE3</div>\n                <div style={{backgroundColor: \"green\"}} className=\"page\">PAGE4</div>\n                <div style={{backgroundColor: \"orange\"}} className=\"page\">PAGE5</div>\n            </FlipPager>\n\n            <ul>\n                <li><span onClick={() => {setSelected(0)}}>PAGE1</span></li>\n                <li><span onClick={() => {setSelected(1)}}>PAGE2</span></li>\n                <li><span onClick={() => {setSelected(2)}}>PAGE3</span></li>\n                <li><span onClick={() => {setSelected(3)}}>PAGE4</span></li>\n                <li><span onClick={() => {setSelected(4)}}>PAGE5</span></li>\n            </ul>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}